name: Run Spark Unit Tests

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'spark_df_utils/**'
      - 'tests/**'
      - 'requirements*.txt'
      - 'setup.py'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ "main", "develop" ]
    paths:
      - 'spark_df_utils/**'
      - 'tests/**'
      - 'requirements*.txt'
      - 'setup.py'
      - '.github/workflows/test.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 
      uses: actions/setup-python@v3
      with:
        python-version: "3.10.18"

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pyspark==3.5.6 pytest pytest-cov pytest-spark
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 spark_df_utils tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 spark_df_utils tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run unit tests with pytest
      run: |
        pytest tests/ -v --cov=spark_dataframe_lib --cov-report=xml --cov-report=html
      env:
        PYSPARK_PYTHON: python
        PYSPARK_DRIVER_PYTHON: python
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
        fail_ci_if_error: true
    
    - name: Archive test results
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: test-results-python3.10.18-spark3.5.6
        path: |
          htmlcov/
          coverage.xml
    
    - name: Run integration tests (if any)
      run: |
        if [ -d "integration_tests" ]; then
          pytest integration_tests/ -v --tb=short
        fi

